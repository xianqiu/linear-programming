<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础概念 on Linear Programming in Practice</title>
    <link>//localhost:1313/docs/basics/</link>
    <description>Recent content in 基础概念 on Linear Programming in Practice</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 25 Mar 2025 17:09:20 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/docs/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>标准形式</title>
      <link>//localhost:1313/docs/basics/standard-form/</link>
      <pubDate>Fri, 21 Mar 2025 19:38:06 +0800</pubDate>
      <guid>//localhost:1313/docs/basics/standard-form/</guid>
      <description>&lt;p&gt;考虑一个线性规划的例子。&lt;/p&gt;&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;\begin{aligned}&#xA;\max~ &amp;amp; 7x_1 &amp;#43; 6 x_2\\&#xA;\text{s.t.}~ &amp;amp; 3x_1 &amp;#43; x_2 \leq 120 \\&#xA;&amp;amp; x_1 &amp;#43; 2x_2 \leq 160 \\&#xA;&amp;amp; x_1 \leq 35 \\&#xA;\end{aligned}&#xA;$$&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;其中第一行是目标函数，其中 &lt;code&gt;max&lt;/code&gt;​ 代表优化方向，即最大化目标函数值。接下来是三个约束条件，分别用不等式来描述，其中 &lt;code&gt;s.t.&lt;/code&gt; 是 &lt;code&gt;subject to&lt;/code&gt; 的缩写）。&lt;/p&gt;&#xA;&lt;p&gt;求解这个问题，就要找到满足约束条件的 $x_1,x_2$，使得目标函数值最大。&lt;/p&gt;&#xA;&lt;h3 id=&#34;矩阵形式&#34;&gt;矩阵形式 &lt;a href=&#34;#%e7%9f%a9%e9%98%b5%e5%bd%a2%e5%bc%8f&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;接下来我们把它写成矩阵的形式。定义列向量 $c$ 和 $x$:&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;c = \begin{bmatrix}&#xA;7\\&#xA;6&#xA;\end{bmatrix}\quad&#xA;x = \begin{bmatrix}&#xA;x_1\\&#xA;x_2&#xA;\end{bmatrix}&#xA;$$&#xA;  &lt;/div&gt;&#xA;那么目标函数可以写成 $c^Tx$。&#xA;定义矩阵 $A$ 和 列向量 $b$:&lt;/p&gt;</description>
    </item>
    <item>
      <title>可行区域</title>
      <link>//localhost:1313/docs/basics/feasible-region/</link>
      <pubDate>Mon, 24 Mar 2025 17:21:06 +0800</pubDate>
      <guid>//localhost:1313/docs/basics/feasible-region/</guid>
      <description>&lt;p&gt;从一个例子开始。&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;\begin{aligned}&#xA;\max~ &amp;amp; 5x_1 &amp;#43; 3x_2\\&#xA;\text{s.t. }&amp;amp; x_1 &amp;#43; 2x_2 \leq 8\\&#xA;&amp;amp; 3x_1 &amp;#43; 4x_2 \leq 20\\&#xA;&amp;amp; x_1\geq 0, x_2\geq 0&#xA;\end{aligned}&#xA;$$&#xA;  &lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;接下来看它的约束条件。&lt;/p&gt;&#xA;&lt;p&gt;把 $x_1,x_2$ 看成平面的两条坐标轴，那么 $x_1\geq 0$ 和 $x_2\geq 0$ 就表示下面的区域。&lt;/p&gt;&#xA;&lt;figure class=&#34;text-center&#34;&gt;&lt;img src=&#34;//localhost:1313/docs/basics/feasible-region/x1x2.png&#34; width=&#34;400px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;第一个不等式 $x_1 + 2x_2 \leq 8$，它表示直线 $x_1+2x_2=8$ 的下半边部分。把它跟 $x_1\geq 0$ 和 $x_2\geq 0$ 取交集，如下图所示。&lt;/p&gt;&#xA;&lt;figure class=&#34;text-center&#34;&gt;&lt;img src=&#34;//localhost:1313/docs/basics/feasible-region/line1.png&#34; width=&#34;400px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;第二个约束条件 $3x_1 + 4x_2 \leq 20$，它表示直线  $3x_1 + 4x_2 \leq 20$ 的左半边部分。再把它跟前面的区域取交集。&lt;/p&gt;&#xA;&lt;figure class=&#34;text-center&#34;&gt;&lt;img src=&#34;//localhost:1313/docs/basics/feasible-region/line2.png&#34; width=&#34;400px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;可行域&#34;&gt;可行域 &lt;a href=&#34;#%e5%8f%af%e8%a1%8c%e5%9f%9f&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;所有约束条件取交集，得到的点 $x=(x_1,x_2)$ 的集合，称为&lt;strong&gt;可行区域  (Feasible Region)&lt;/strong&gt;，或者叫&lt;strong&gt;可行域&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基本可行解</title>
      <link>//localhost:1313/docs/basics/basic-feasible-solution/</link>
      <pubDate>Tue, 25 Mar 2025 13:30:41 +0800</pubDate>
      <guid>//localhost:1313/docs/basics/basic-feasible-solution/</guid>
      <description>&lt;p&gt;线性规划的约束条件定义了可行区域。如下图所示，可行区域是连续的，其中可行解有无穷多个。那么最优解适否存在。如果存在，如何找到它呢。因此，有必要研究一下最优解的性质。&lt;/p&gt;&#xA;&lt;figure class=&#34;text-center&#34;&gt;&lt;img src=&#34;//localhost:1313/docs/basics/basic-feasible-solution/vertex.png&#34; width=&#34;300px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;可以证明如下结论。&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;alert alert-info d-flex&#34; role=&#34;alert&#34;&gt;&#xA;  &lt;div class=&#34;flex-shrink-1 alert-icon&#34;&gt;&#xA;  &#xA;  &lt;span class=&#34;material-icons size-20 me-2&#34;&gt;&#xA;  info&#xA;  &lt;/span&gt;&lt;/div&gt;&#xA;  &#xA;  &lt;div class=&#34;w-100&#34;&gt;&lt;strong&gt;定理&lt;/strong&gt; 最优解是可行区域的一个顶点。&lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;注意，顶点的数量是有限的。这样一来，最优解一定存在。可以枚举所有顶点，找到目标函数值最优的顶点。当然，枚举的效率太低，需要设计更好的算法。&lt;/p&gt;&#xA;&lt;p&gt;但是，有一个概念没讲清楚。那就是，什么是顶点。从几何视角来看，顶点不难理解。接下里，需要从代数角度进行定义，这样才方便计算。&lt;/p&gt;&#xA;&lt;h3 id=&#34;标准形&#34;&gt;标准形 &lt;a href=&#34;#%e6%a0%87%e5%87%86%e5%bd%a2&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;考虑线性规划的标准形式：&lt;/p&gt;&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;\begin{aligned}&#xA;\min~ &amp;amp; c^T x\\ &#xA;\text{s.t.}~ &amp;amp; Ax=b\\&#xA;&amp;amp; x\geq 0&#xA;\end{aligned}&#xA;$$&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;其中 $c, x \in \mathbb{R}^n$，$A\in\mathbb{R}^{m\times n}$，$b\in\mathbb{R}^m \geq \mathbf{0}$，$n\geq m$。&lt;/p&gt;&#xA;&lt;h3 id=&#34;基矩阵&#34;&gt;基矩阵 &lt;a href=&#34;#%e5%9f%ba%e7%9f%a9%e9%98%b5&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;注意 $A$ 是一个 $m$ 行 $n$ 列的矩阵，可以把它看成 $n$ 个 $m$ 维的列向量。&#xA;$$&#xA;A = [a_1, a_2, &amp;hellip;, a_n]&#xA;$$&#xA;其中 $a_j \in \mathbb{R}^m$，$j=1,2,&amp;hellip;n$。&lt;/p&gt;&#xA;&lt;p&gt;接下来把 $A$ 拆成两个部分：&#xA;$$&#xA;A = [B \quad N]&#xA;$$&#xA;其中 $B$ 包含前 $m$ 列，因此 $B$ 是一个方阵，即 $B\in \mathbb{R}^{m\times m}$；而 $N$ 包含剩下的 $n-m$ 列，因此 $N \in \mathbb{R}^{m \times (n-m)}$。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
