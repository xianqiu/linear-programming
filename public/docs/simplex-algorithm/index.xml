<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单纯形算法 on Linear Programming in Practice</title>
    <link>//localhost:1313/docs/simplex-algorithm/</link>
    <description>Recent content in 单纯形算法 on Linear Programming in Practice</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Mar 2025 13:48:18 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/docs/simplex-algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>单纯形算法</title>
      <link>//localhost:1313/docs/simplex-algorithm/simplex/</link>
      <pubDate>Fri, 21 Mar 2025 19:35:16 +0800</pubDate>
      <guid>//localhost:1313/docs/simplex-algorithm/simplex/</guid>
      <description>&lt;p&gt;考虑线性规划问题的标准形式。&lt;/p&gt;&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;\begin{aligned}&#xA;\min~ &amp;amp; c^T x\\ &#xA;\text{s.t.}~ &amp;amp; Ax=b\\&#xA;&amp;amp; x\geq 0&#xA;\end{aligned}&#xA;$$&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;其中 $c, x \in \mathbb{R}^n$，$A\in\mathbb{R}^{m\times n}$，$b\in\mathbb{R}^m \geq \mathbf{0}$，$n\geq m$。&lt;/p&gt;&#xA;&lt;p&gt;这个问题还可以这样描述。&lt;/p&gt;&#xA;&lt;p&gt;找到一个点 $x\in P:={\{x| Ax=b, x\geq 0\}}$，使得目标函数 $f(x):=c^Tx$ 最小化。从几何的角度来看，$P$ 是一个多面体，$x$ 是多面体的一个顶点。&lt;/p&gt;&#xA;&lt;p&gt;单纯形算法的思路就是，从多面体的某一个顶点开始，然后沿着目标函数减少的方向，迭代到另一个顶点，直到目标函数值无法降低。那么对应的顶点就是最优解。&lt;/p&gt;&#xA;&lt;h3 id=&#34;分块矩阵&#34;&gt;分块矩阵 &lt;a href=&#34;#%e5%88%86%e5%9d%97%e7%9f%a9%e9%98%b5&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;先把原问题中的矩阵和向量用分块的方式表达。令 $B$ 和 $N$ 分别代表基矩阵和非基矩阵。$A$ 可以写成下面的形式。&lt;/p&gt;&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;A = [B \quad N]&#xA;$$&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;相应地，$x$ 和 $c$ 可以写成&#xA;&#xA;  &lt;div class=&#34;equation leqno&#34; &gt;$$&#xA;x = \begin{bmatrix}&#xA;x_B \\&#xA;x_N&#xA;\end{bmatrix}\quad&#xA;c = \begin{bmatrix} c_B \\&#xA;c_N\end{bmatrix}&#xA;$$&#xA;  &lt;/div&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法示例</title>
      <link>//localhost:1313/docs/simplex-algorithm/example/</link>
      <pubDate>Thu, 27 Mar 2025 13:47:58 +0800</pubDate>
      <guid>//localhost:1313/docs/simplex-algorithm/example/</guid>
      <description></description>
    </item>
    <item>
      <title>处理退化</title>
      <link>//localhost:1313/docs/simplex-algorithm/degeneracy/</link>
      <pubDate>Thu, 27 Mar 2025 13:42:05 +0800</pubDate>
      <guid>//localhost:1313/docs/simplex-algorithm/degeneracy/</guid>
      <description></description>
    </item>
    <item>
      <title>处理起点</title>
      <link>//localhost:1313/docs/simplex-algorithm/start-vertex/</link>
      <pubDate>Thu, 27 Mar 2025 13:48:18 +0800</pubDate>
      <guid>//localhost:1313/docs/simplex-algorithm/start-vertex/</guid>
      <description></description>
    </item>
  </channel>
</rss>
